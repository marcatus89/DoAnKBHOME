@page "/admin/warehouse"
@attribute [Authorize(Roles = "Admin, Warehouse")]
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext

<h3>Bảng điều khiển Kho</h3>

<div class="row">
    @* Cột 1: Đơn hàng cần xử lý để giao cho khách *@
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <span class="oi oi-box"></span> Đơn hàng cần xử lý (Xuất kho)
            </div>
            <div class="card-body">
                @if (ordersToFulfill == null)
                {
                    <LoadingSpinner />
                }
                else if (!ordersToFulfill.Any())
                {
                    <div class="alert alert-success mt-3">Không có đơn hàng nào cần xử lý.</div>
                }
                else
                {
                    <ul class="list-group">
                        @foreach (var order in ordersToFulfill)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                Đơn hàng #@order.Id - @order.CustomerName
                                <a href="@($"/admin/orders/{order.Id}")" class="btn btn-sm btn-info">Chuẩn bị hàng</a>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>

    @* Cột 2: Đơn nhập hàng đang chờ nhận *@
    <div class="col-md-6">
        <div class="card">
            <div class="card-header bg-success text-white">
                <span class="oi oi-clipboard"></span> Đơn nhập hàng đang chờ (Nhập kho)
            </div>
            <div class="card-body">
                @if (purchaseOrdersToReceive == null)
                {
                    <LoadingSpinner />
                }
                else if (!purchaseOrdersToReceive.Any())
                {
                     <div class="alert alert-info mt-3">Không có đơn nhập hàng nào đang chờ.</div>
                }
                else
                {
                    <ul class="list-group">
                        @foreach (var po in purchaseOrdersToReceive)
                        {
                             <li class="list-group-item d-flex justify-content-between align-items-center">
                                Phiếu nhập @po.PurchaseOrderNumber - @po.Supplier?.Name
                                <a href="@($"/admin/purchase-orders/{po.Id}")" class="btn btn-sm btn-secondary">Xem/Nhận hàng</a>
                            </li>
                        }
                    </ul>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<Order>? ordersToFulfill;
    private List<PurchaseOrder>? purchaseOrdersToReceive;

    protected override async Task OnInitializedAsync()
    {
        // Tải đồng thời cả hai danh sách công việc
        var ordersTask = DbContext.Orders
            .Where(o => o.Status == "Đã thanh toán")
            .OrderBy(o => o.OrderDate)
            .ToListAsync();

        var purchaseOrdersTask = DbContext.PurchaseOrders
            .Include(po => po.Supplier)
            .Where(po => po.Status == "Đã đặt hàng")
            .OrderBy(po => po.OrderDate)
            .ToListAsync();

        await Task.WhenAll(ordersTask, purchaseOrdersTask);

        ordersToFulfill = await ordersTask;
        purchaseOrdersToReceive = await purchaseOrdersTask;
    }
}

