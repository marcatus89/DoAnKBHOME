@page "/thanh-toan"
@attribute [Authorize]
@inject NavigationManager Navigation
@inject OrderService OrderSvc
@inject CartService CartSvc
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>Thông tin Thanh toán</h3>

@if (isSubmitting)
{
    <p><em>Đang xử lý đơn hàng của bạn...</em></p>
}
else if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}

@if (!CartSvc.Items.Any())
{
    <p>Giỏ hàng của bạn đang trống. Vui lòng thêm sản phẩm trước khi thanh toán.</p>
}
else
{
    <EditForm Model="@order" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group mb-3">
            <label for="customerName">Họ và tên</label>
            <InputText id="customerName" class="form-control" @bind-Value="order.CustomerName" />
        </div>
        <div class="form-group mb-3">
            <label for="shippingAddress">Địa chỉ giao hàng</label>
            <InputText id="shippingAddress" class="form-control" @bind-Value="order.ShippingAddress" />
        </div>
        <div class="form-group mb-3">
            <label for="phoneNumber">Số điện thoại</label>
            <InputText id="phoneNumber" class="form-control" @bind-Value="order.PhoneNumber" />
        </div>

        <button type="submit" class="btn btn-primary" disabled="@isSubmitting">
            @if (isSubmitting)
            {
                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                <span> Đang xử lý...</span>
            }
            else
            {
                <span>Xác nhận và Đặt hàng</span>
            }
        </button>
    </EditForm>
}

@code {
    private Order order = new Order();
    private string? errorMessage;
    private bool isSubmitting = false;
    
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; } = default!;

    private async Task HandleValidSubmit()
    {
        isSubmitting = true;
        errorMessage = null;
        
        var authState = await authenticationStateTask;
        var user = authState.User;

        // --- SỬA LỖI LOGIC XỬ LÝ KẾT QUẢ ---
        var result = await OrderSvc.PlaceOrderAsync(order, user);
        
        if (result.Success) // Kiểm tra thuộc tính Success
        {
            Navigation.NavigateTo("/xac-nhan-don-hang");
        }
        else // Nếu thất bại, lấy thông báo lỗi
        {
            errorMessage = result.ErrorMessage;
            isSubmitting = false;
        }
    }
}

